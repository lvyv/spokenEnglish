"""initial migration

Revision ID: 0823a2109835
Revises: 
Create Date: 2024-12-08 13:18:35.886644

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0823a2109835'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('feedbacks')
    op.drop_index('ix_characters_id', table_name='characters')
    op.drop_table('characters')
    op.drop_table('memory')
    op.drop_index('ix_interactions_id', table_name='interactions')
    op.drop_table('interactions')
    op.drop_table('quivr_info')
    op.add_column('users', sa.Column('github_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('github_email', sa.String(), nullable=True))
    op.alter_column('users', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('users', 'github_email')
    op.drop_column('users', 'github_name')
    op.create_table('quivr_info',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quivr_api_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quivr_brain_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='memories_pkey')
    )
    op.create_table('interactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('client_message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('server_message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('platform', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('action_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('client_message_unicode', sa.VARCHAR(length=65535), autoincrement=False, nullable=True),
    sa.Column('server_message_unicode', sa.VARCHAR(length=65535), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('character_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('tools', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('message_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('llm_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='interactions_pkey')
    )
    op.create_index('ix_interactions_id', 'interactions', ['id'], unique=False)
    op.create_table('memory',
    sa.Column('memory_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('source_session_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('content', sa.VARCHAR(length=65535), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('memory_id', name='memory_pkey')
    )
    op.create_table('characters',
    sa.Column('id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=1024), autoincrement=False, nullable=False),
    sa.Column('system_prompt', sa.VARCHAR(length=262144), autoincrement=False, nullable=True),
    sa.Column('user_prompt', sa.VARCHAR(length=262144), autoincrement=False, nullable=True),
    sa.Column('text_to_speech_use', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('voice_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('visibility', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('tts', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('avatar_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('background_text', sa.VARCHAR(length=262144), autoincrement=False, nullable=True),
    sa.Column('rebyte_api_project_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('rebyte_api_agent_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('rebyte_api_version', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='characters_pkey')
    )
    op.create_index('ix_characters_id', 'characters', ['id'], unique=False)
    op.create_table('feedbacks',
    sa.Column('message_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('server_message_unicode', sa.VARCHAR(length=65535), autoincrement=False, nullable=True),
    sa.Column('feedback', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('comment', sa.VARCHAR(length=65535), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('message_id', name='feedbacks_pkey')
    )
    # ### end Alembic commands ###
